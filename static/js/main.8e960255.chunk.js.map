{"version":3,"sources":["ShowCaseLayout.js","index.js"],"names":["ResponsiveReactGridLayout","WidthProvider","Responsive","ShowcaseLayout","props","state","currentBreakpoint","compactType","mounted","layouts","lg","initialLayout","onBreakpointChange","bind","onCompactTypeChange","onLayoutChange","onNewLayout","this","setState","_","map","l","i","key","className","static","title","breakpoint","oldCompactType","layout","generateLayout","cols","capitalize","onClick","measureBeforeMount","useCSSTransforms","preventCollision","generateDOM","React","Component","range","item","y","Math","ceil","random","x","floor","w","h","toString","defaultProps","rowHeight","md","sm","xs","xxs","ExampleLayout","stringifyLayout","contentDiv","document","getElementById","gridProps","window","ReactDOM","render","createElement"],"mappings":"wSAIMA,EAA4BC,wBAAcC,cAE3BC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,kBAAmB,KACnBC,YAAa,WACbC,SAAS,EACTC,QAAS,CAAEC,GAAIN,EAAMO,gBAGvB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBAZF,E,gEAgBjBI,KAAKC,SAAS,CAAEV,SAAS,M,oCAIzB,OAAOW,IAAEC,IAAIH,KAAKZ,MAAMI,QAAQC,IAAI,SAASW,EAAGC,GAC9C,OACE,yBAAKC,IAAKD,EAAGE,UAAWH,EAAEI,OAAS,SAAW,IAC3CJ,EAAEI,OACD,0BACED,UAAU,OACVE,MAAM,yDAFR,YAIYJ,GAGZ,0BAAME,UAAU,QAAQF,S,yCAOfK,GACjBV,KAAKC,SAAS,CACZZ,kBAAmBqB,M,4CAIA,IACAC,EAAmBX,KAAKZ,MAArCE,YACFA,EACe,eAAnBqB,EACI,WACmB,aAAnBA,EACE,KACA,aACRX,KAAKC,SAAS,CAAEX,kB,qCAGHsB,EAAQpB,GACrBQ,KAAKb,MAAMW,eAAec,EAAQpB,K,oCAIlCQ,KAAKC,SAAS,CACZT,QAAS,CAAEC,GAAIoB,S,+BAKjB,OACE,6BACE,oDACuBb,KAAKZ,MAAMC,kBADlC,KAEIW,KAAKb,MAAM2B,KAAKd,KAAKZ,MAAMC,mBAC3B,IAHJ,YAMA,gDACmB,IAChBa,IAAEa,WAAWf,KAAKZ,MAAME,cAAgB,iBAE3C,4BAAQ0B,QAAShB,KAAKD,aAAtB,uBACA,4BAAQiB,QAAShB,KAAKH,qBAAtB,0BAGA,kBAACd,EAAD,iBACMiB,KAAKb,MADX,CAEEK,QAASQ,KAAKZ,MAAMI,QACpBG,mBAAoBK,KAAKL,mBACzBG,eAAgBE,KAAKF,eAErBmB,oBAAoB,EAGpBC,iBAAkBlB,KAAKZ,MAAMG,QAC7BD,YAAaU,KAAKZ,MAAME,YACxB6B,kBAAmBnB,KAAKZ,MAAME,cAE7BU,KAAKoB,oB,GAhG4BC,IAAMC,WAmHlD,SAAST,IACP,OAAOX,IAAEC,IAAID,IAAEqB,MAAM,EAAG,KAAK,SAASC,EAAMnB,GAC1C,IAAIoB,EAAIC,KAAKC,KAAqB,EAAhBD,KAAKE,UAAgB,EACvC,MAAO,CACLC,EAAqB,EAAjB3B,IAAE0B,OAAO,EAAG,GAAU,GAC1BH,EAAGC,KAAKI,MAAMzB,EAAI,GAAKoB,EACvBM,EAAG,EACHC,EAAGP,EACHpB,EAAGA,EAAE4B,WACLzB,OAAQkB,KAAKE,SAAW,QAjB9B1C,EAAegD,aAAe,CAC5B3B,UAAW,SACX4B,UAAW,GACXrC,eAAgB,aAChBgB,KAAM,CAAErB,GAAI,GAAI2C,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAK,GAC3C7C,cAAemB,K,IClHX2B,E,kDACJ,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEwB,OAAQ,IACvB,EAAKd,eAAiB,EAAKA,eAAeF,KAApB,gBAHL,E,2DAMJgB,GACbZ,KAAKC,SAAS,CAAEW,OAAQA,M,wCAIxB,OAAOZ,KAAKZ,MAAMwB,OAAOT,KAAI,SAASC,GACpC,OACE,yBAAKG,UAAU,aAAaD,IAAKF,EAAEC,GACjC,2BAAID,EAAEC,GADR,MACkBD,EAAEyB,EADpB,KACyBzB,EAAEqB,EAD3B,KACgCrB,EAAE2B,EADlC,KACuC3B,EAAE4B,EADzC,U,+BAQJ,OACE,6BACE,yBAAKzB,UAAU,cAAf,gBACe,8CADf,IAEE,yBAAKA,UAAU,WAAWP,KAAKyC,oBAEjC,kBAAC,EAAD,CAAgB3C,eAAgBE,KAAKF,sB,GA5BjBuB,IAAMC,WAkC5BoB,EAAaC,SAASC,eAAe,QACrCC,EAAYC,OAAOD,WAAa,GACtCE,IAASC,OAAO3B,IAAM4B,cAAcT,EAAeK,GAAYH,K","file":"static/js/main.8e960255.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nexport default class ShowcaseLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBreakpoint: \"lg\",\n      compactType: \"vertical\",\n      mounted: false,\n      layouts: { lg: props.initialLayout }\n    };\n\n    this.onBreakpointChange = this.onBreakpointChange.bind(this);\n    this.onCompactTypeChange = this.onCompactTypeChange.bind(this);\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n    this.onNewLayout = this.onNewLayout.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n  }\n\n  generateDOM() {\n    return _.map(this.state.layouts.lg, function(l, i) {\n      return (\n        <div key={i} className={l.static ? \"static\" : \"\"}>\n          {l.static ? (\n            <span\n              className=\"text\"\n              title=\"This item is static and cannot be removed or resized.\"\n            >\n              Static - {i}\n            </span>\n          ) : (\n            <span className=\"text\">{i}</span>\n          )}\n        </div>\n      );\n    });\n  }\n\n  onBreakpointChange(breakpoint) {\n    this.setState({\n      currentBreakpoint: breakpoint\n    });\n  }\n\n  onCompactTypeChange() {\n    const { compactType: oldCompactType } = this.state;\n    const compactType =\n      oldCompactType === \"horizontal\"\n        ? \"vertical\"\n        : oldCompactType === \"vertical\"\n          ? null\n          : \"horizontal\";\n    this.setState({ compactType });\n  }\n\n  onLayoutChange(layout, layouts) {\n    this.props.onLayoutChange(layout, layouts);\n  }\n\n  onNewLayout() {\n    this.setState({\n      layouts: { lg: generateLayout() }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          Current Breakpoint: {this.state.currentBreakpoint} ({\n            this.props.cols[this.state.currentBreakpoint]\n          }{\" \"}\n          columns)\n        </div>\n        <div>\n          Compaction type:{\" \"}\n          {_.capitalize(this.state.compactType) || \"No Compaction\"}\n        </div>\n        <button onClick={this.onNewLayout}>Generate New Layout</button>\n        <button onClick={this.onCompactTypeChange}>\n          Change Compaction Type\n        </button>\n        <ResponsiveReactGridLayout\n          {...this.props}\n          layouts={this.state.layouts}\n          onBreakpointChange={this.onBreakpointChange}\n          onLayoutChange={this.onLayoutChange}\n          // WidthProvider option\n          measureBeforeMount={false}\n          // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n          // and set `measureBeforeMount={true}`.\n          useCSSTransforms={this.state.mounted}\n          compactType={this.state.compactType}\n          preventCollision={!this.state.compactType}\n        >\n          {this.generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n  }\n}\n\nShowcaseLayout.propTypes = {\n  onLayoutChange: PropTypes.func.isRequired\n};\n\nShowcaseLayout.defaultProps = {\n  className: \"layout\",\n  rowHeight: 30,\n  onLayoutChange: function() {},\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n  initialLayout: generateLayout()\n};\n\nfunction generateLayout() {\n  return _.map(_.range(0, 25), function(item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: (_.random(0, 5) * 2) % 12,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      static: Math.random() < 0.05\n    };\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ShowCaseLayout from \"./ShowCaseLayout\";\n\nclass ExampleLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { layout: [] };\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n  }\n\n  onLayoutChange(layout) {\n    this.setState({ layout: layout });\n  }\n\n  stringifyLayout() {\n    return this.state.layout.map(function(l) {\n      return (\n        <div className=\"layoutItem\" key={l.i}>\n          <b>{l.i}</b>: [{l.x}, {l.y}, {l.w}, {l.h}]\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"layoutJSON\">\n          Displayed as <code>[x, y, w, h]</code>:\n          <div className=\"columns\">{this.stringifyLayout()}</div>\n        </div>\n        <ShowCaseLayout onLayoutChange={this.onLayoutChange} />\n      </div>\n    );\n  }\n}\n\nconst contentDiv = document.getElementById(\"root\");\nconst gridProps = window.gridProps || {};\nReactDOM.render(React.createElement(ExampleLayout, gridProps), contentDiv);\n"],"sourceRoot":""}